[{"title":"Spring框架","date":"2025-08-28T03:47:28.000Z","path":"2025/08/28/Spring框架/08/28/Spring框架/","text":"Spring框架Spring两大核心思想IOC:控制反转。控制权的转移，即应用程序本身不再负责组件的创建、维护。而是将控制权移交出去。 DI：是Spring框架中IOC的具体实现。依赖其他容器来创建和维护所需要的组件，并将其注入到应用程序中 AOP：面向切面编程。简单来说就是将程序中重复的代码抽取出来，利用动态代理、不在修改源码的基础上，对现有的方法进行增强 12345// 在com.skm.service.impl包中所有类的所有方法执行之前调用@Before(&quot;execution(* com.skm.service.impl.*.*(..))&quot;)public void beforeMethod()&#123; &#125;","tags":[{"name":"Spring","slug":"Spring","permalink":"http://example.com/tags/Spring/"}]},{"title":"阿里云服务器部署","date":"2025-08-27T08:41:43.000Z","path":"2025/08/27/阿里云服务器部署/08/27/阿里云服务器部署/","text":"阿里云服务器部署云服务器ECS_云主机_弹性服务器_计算-阿里云","tags":[{"name":"服务器","slug":"服务器","permalink":"http://example.com/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"}]},{"title":"Vue生命周期","date":"2025-08-18T02:56:47.000Z","path":"2025/08/18/vue生命周期/08/18/vue生命周期/","text":"路由模式有两种嵌套路由路由传参vue3路由传参不再支持params方式，只支持query方式 123&lt;router-link :to=&quot;&#123;path:&#x27;/newsitem&#x27;,query:&#123;id:newsId,title:newsTitle&#125;&#125;&quot;&gt; 新闻详情&lt;/router-link&gt; 网址：locallhost:8080&#x2F;#&#x2F;newsitem?id&#x3D;1001&amp;title&#x3D;竟然是他 12345678910&lt;template&gt; &#123;&#123;$route.query.id&#125;&#125; &#123;&#123;$route.query.title&#125;&#125;&lt;/template&gt;&lt;script setup&gt; // 选项式API this.$route.query.id // 组合式API const route = useRoute(); // route.query.name&lt;/script&gt; 路由跳转通过事件触发页面-登录成功跳转界面 JS版本 123if(loginPass)&#123; location.href=&#x27;新的地址&#x27;;&#125; Vue版本 1234567891011&lt;template&gt;&lt;/template&gt; l&lt;script setup&gt; // 选项式API this.$route.query.id // 组合API const router = useRouter(); // router.push(&#x27;/index&#x27;); router.push(path:&#x27;/index&#x27;,query:&#123;id:10001&#125;);&lt;/script&gt; 编程式路由解决问题：js中需要通过逻辑判断才进行页面跳转，在Vue中需要使用编程式路由解决。 js中使用：location.href&#x3D;”” Vue中： 选项式API 12345678// 页面跳转this.$router.push(&#x27;/页面路径&#x27;);//页面前进this.$router.forward();this.$router.go(1);// 页面后退this.$router.back();this.$router.go(-1); 组合式API12345678910111213ipmort &#123;useRouter&#125; from &quot;vue-router&quot;const router = useRouter();// 页面跳转router.push(&#x27;/页面路径&#x27;);// 页面前进router.forward();router.go(1);// 1可以写成任意数字// 页面后退router.back();router.go(-1); 路由监听选项式API1234567watch:&#123; // 监听路由跳转 $route(newRoute,oldRoute)&#123; console.log(newRoute,oldRoute);&#125;&#125;&#125; 组合式API123watch(()=&gt;route.params.(newParams)=&gt;&#123; &#125;)","tags":[{"name":"Vue","slug":"Vue","permalink":"http://example.com/tags/Vue/"}]},{"title":"v-if和v-show之间的区别","date":"2025-08-15T01:16:06.000Z","path":"2025/08/15/v-if和v-show之间的区别/08/15/v-if和v-show之间的区别/","text":"v-if和v-show之间的区别","tags":[{"name":"Vue","slug":"Vue","permalink":"http://example.com/tags/Vue/"}]},{"title":"JavaSE知识点","date":"2025-08-14T08:46:51.000Z","path":"2025/08/14/JavaSE知识点/08/14/JavaSE知识点/","text":"1类、数组、接口、枚举、注解等除了基本数据类型都是引用数据类型 8种基本数据类型及其包装器类int short byte long double float boolean char Integer Short Byte Long Double Float Boolean Character &#x3D;&#x3D; 和 equals 的区别是什么&#x3D;&#x3D; 如果比较的基本数据类型：比较的值是否相等 如果比较的引用数据类型：比较的引用的地址是否相等 equals是Object类提供的方法，可以被重写 字符串类重写了.equals方法实现比较两个字符串值是否相等 如果重写了.equals方法，一般情况下需要同步重写hashCode 简述&amp;和&amp;&amp; |和|| 的区别&amp;&amp;和|| &amp;和| 都可以表示与和或 &amp;&amp;和||具有短路效果。当前一个表达式已经能够决定整个式子的结果，后一个表达式不执行 （&amp;&amp;一假即假，表达式1为假短路。||一真即真，表达式1为真短路。） &amp;和|还可以表示二进制位运算 switch选择语句中支持哪些数据类型","tags":[{"name":"Java","slug":"Java","permalink":"http://example.com/tags/Java/"}]},{"title":"第一人称MOBA","date":"2025-08-11T06:18:43.000Z","path":"2025/08/11/游戏设计/08/11/游戏设计/","text":"","tags":[{"name":"游戏设计","slug":"游戏设计","permalink":"http://example.com/tags/%E6%B8%B8%E6%88%8F%E8%AE%BE%E8%AE%A1/"}]},{"title":"接口和抽象类","date":"2025-08-07T01:16:44.000Z","path":"2025/08/07/接口和抽象类/08/07/接口和抽象类/","text":"接口和抽象类 抽象类表示不能被实例化的类 抽象类中的属性没有限制，抽象类中的方法可以有普通方法，也可以有抽象方法。 抽象类是类，只能单一继承。","tags":[{"name":"Java","slug":"Java","permalink":"http://example.com/tags/Java/"}]},{"title":"Collection","date":"2025-08-06T08:00:27.000Z","path":"2025/08/06/Collection/08/06/Collection/","text":"Collection有序，可重复(List):ArrayList,LinkedList,Vector 无序，不可重复(Set):HashSet,TreeSet 用于存储键值对(Map):HashMap,TreeMap","tags":[{"name":"Java","slug":"Java","permalink":"http://example.com/tags/Java/"}]},{"title":"this与super","date":"2025-08-06T03:53:20.000Z","path":"2025/08/06/this与super/08/06/this与super/","text":"this()可以调用本类中的","tags":[{"name":"Java","slug":"Java","permalink":"http://example.com/tags/Java/"}]},{"title":"1","date":"2025-08-05T07:32:19.000Z","path":"2025/08/05/01/08/05/01/","text":"","tags":[{"name":"随笔","slug":"随笔","permalink":"http://example.com/tags/%E9%9A%8F%E7%AC%94/"}]},{"title":"接口","date":"2025-08-05T06:21:19.000Z","path":"2025/08/05/“接口”/08/05/“接口”/","text":"Java中类单一继承，但是可以实现多个接口 &#x2F;&#x2F; JDK8新特性，默认实现方法，使用default修饰方法 ​ &#x2F;&#x2F; 如果其中一个父接口中有默认实现方法，继承即可。 ​ &#x2F;&#x2F; 如果多个父接口中都有默认实现方法，子接口必须重写该方法 123456789101112// 接口定义常量package interfacepackage;public interface IFly &#123; public static final double LOWSPEED = 200; public static final double NORMALSPEED = 200; public static final double HIGHSPEED = 200; void start(); void fly(); public abstract void stop();&#125;","tags":[{"name":"Java","slug":"Java","permalink":"http://example.com/tags/Java/"}]},{"title":"测试一下","date":"2025-07-31T06:02:24.000Z","path":"2025/07/31/测试一下/07/31/测试一下/","text":"","tags":[]},{"title":"MySQL概念与题目","date":"2025-07-30T17:02:27.000Z","path":"2025/07/31/MySQL概念与题目/07/31/MySQL概念与题目/","text":"设计表要遵循数据库的三大范式 第一范式：要求所有的字段均需要保证原子性（不可再分） 第二范式：要求满足第一范式的基础上，要求表中的所有非主键字段完全依赖于主键。 第三范式：要求满足第二范式的基础上，要求表中所有非主键字段直接依赖于主键。（不能传递依赖） 数据库事务事务的四大特性：ACID 原子性，一致性，隔离性，持久性 一组增删改DML语句 + TCL事务管理语句组成 MySQL事务需要手动开始 事务开始 BEGIN START TRANSACTION 开启事务","tags":[{"name":"MySQL","slug":"MySQL","permalink":"http://example.com/tags/MySQL/"}]},{"title":"Csharp","date":"2025-07-30T16:51:20.000Z","path":"2025/07/31/Csharp/07/31/Csharp/","text":"C#是世界上最好的语言.prccjfkdkrko{zoom: 250%;}","tags":[{"name":"随笔","slug":"随笔","permalink":"http://example.com/tags/%E9%9A%8F%E7%AC%94/"}]},{"title":"Java输出质数","date":"2025-07-30T08:30:20.000Z","path":"2025/07/30/Java输出质数/07/30/Java输出质数/","text":"12345678910111213141516171819202122// Java输出质数 for(int prime_number = 2 ;prime_number&lt;=200;prime_number++) &#123; boolean isprime_number = true; if(prime_number == 2) &#123; isprime_number = false; &#125; for(int i =2;i&lt;prime_number;i++) &#123; if(prime_number%i==0) &#123; isprime_number = false; break; &#125; &#125; if(isprime_number == true) &#123; System.out.println(&quot;质数有&quot;+prime_number); &#125; &#125;","tags":[{"name":"Java","slug":"Java","permalink":"http://example.com/tags/Java/"}]},{"title":"生成ssh密钥语句<ssh-keygen -t ed25519 -C 我的邮箱> <br> 生成密钥之后在GitHub设置里添加密钥，部署失败要考虑到密钥问题，是不是没添加","date":"2025-03-29T12:35:28.000Z","path":"2025/03/29/生成ssh密钥语句-ssh-keygen-t-ed25519-C-我的邮箱-br-生成密钥之后在GitHub设置里添加密钥，部署失败要考虑到密钥问题，是不是没添加/03/29/生成ssh密钥语句-ssh-keygen-t-ed25519-C-我的邮箱-br-生成密钥之后在GitHub设置里添加密钥，部署失败要考虑到密钥问题，是不是没添加/","text":"","tags":[]},{"title":"学习库函数网站更新https://cplusplus.com/reference/","date":"2023-04-21T14:23:04.000Z","path":"2023/04/21/学习库函数网站更新https-cplusplus-com-reference/04/21/学习库函数网站更新https-cplusplus-com-reference/","text":"","tags":[]},{"title":"”学习库函数网站更新https://cplusplus.com/reference/\n\nhe\n\n","date":"2023-04-21T14:21:41.000Z","path":"2023/04/21/”学习库函数网站更新https-cplusplus-com-reference-he/04/21/”学习库函数网站更新https-cplusplus-com-reference-he/","text":"","tags":[]},{"title":"学习库函数的网站https://cplusplus.com/","date":"2023-04-21T14:13:01.000Z","path":"2023/04/21/学习库函数的网站https-cplusplus-com/04/21/学习库函数的网站https-cplusplus-com/","text":"","tags":[]},{"title":"测试","date":"2023-03-30T07:25:10.000Z","path":"2023/03/30/测试/03/30/测试/","text":"","tags":[]},{"title":"if语句后面不用加;","date":"2023-03-24T10:56:47.000Z","path":"2023/03/24/if语句后面不用加/03/24/if语句后面不用加/","text":"","tags":[]},{"title":"for()循环语句后边不需要加;","date":"2023-03-17T13:17:11.000Z","path":"2023/03/17/for-循环语句后边不需要加/03/17/for-循环语句后边不需要加/","text":"","tags":[]},{"title":"https://coolshell.cn/articles/4990.html 程序员练级网址 coolshell博客","date":"2023-03-17T11:46:48.000Z","path":"2023/03/17/https-coolshell-cn-articles-4990-html-程序员练级网址-coolshell博客/03/17/https-coolshell-cn-articles-4990-html-程序员练级网址-coolshell博客/","text":"","tags":[]},{"title":"EOF是文件的结束标志--end of file","date":"2023-03-12T17:38:50.000Z","path":"2023/03/13/EOF是文件的结束标志-end-of-file/03/13/EOF是文件的结束标志-end-of-file/","text":"","tags":[]},{"title":"在while循环中，break用于永久的终止循环，continue的作用是跳过本次循环continue后面的代码，直接去判断部分，看是否进行下一次循环","date":"2023-03-12T17:32:06.000Z","path":"2023/03/13/在while循环中，break用于永久的终止循环，continue的作用是跳过本次循环continue后面的代码，直接去判断部分，看是否进行下一次循环/03/13/在while循环中，break用于永久的终止循环，continue的作用是跳过本次循环continue后面的代码，直接去判断部分，看是否进行下一次循环/","text":"","tags":[]},{"title":"C语言是结构化的程序设计语言","date":"2023-02-22T08:26:11.000Z","path":"2023/02/22/C语言是结构化的程序设计语言/02/22/C语言是结构化的程序设计语言/","text":"","tags":[]},{"title":"用#define设置宏，不需要在后面加“ ; ”","date":"2023-02-17T10:46:03.000Z","path":"2023/02/17/用-define设置宏，不需要在后面加“-”/02/17/用-define设置宏，不需要在后面加“-”/","text":"","tags":[]},{"title":"ce shi","date":"2023-02-17T09:22:09.000Z","path":"2023/02/17/ce-shi/02/17/ce-shi/","text":"","tags":[]},{"title":"static 修饰局部变量，改变了局部变量的生命周期","date":"2023-02-16T07:38:12.000Z","path":"2023/02/16/static-修饰局部变量，改变了局部变量的生命周期/02/16/static-修饰局部变量，改变了局部变量的生命周期/","text":"","tags":[]},{"title":"准备添加一个评论系统，但是不知道什么时候，233","date":"2023-01-20T08:04:28.000Z","path":"2023/01/20/准备添加一个评论系统，但是不知道什么时候，233/01/20/准备添加一个评论系统，但是不知道什么时候，233/","text":"","tags":[]},{"title":"大家好，这是我的博客","date":"2023-01-19T14:04:34.000Z","path":"2023/01/19/大家好，这是我的博客/01/19/大家好，这是我的博客/","text":"","tags":[]},{"title":"Hello World","date":"2023-01-18T12:10:51.860Z","path":"2023/01/18/hello-world/01/18/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]